$blue: #006eab;
$lightblue: #E7F1FC;
$msgborder: #DFE3E9;
$small-box-shadow: 0 0 3px 1px rgba(0,0,0,.1);
$gutter: 12px;
$desktop-width: 960px;

/*------------------------------------*\
    $BREAKPOINTS
\*------------------------------------*/

/* 0 - 480 (mobile), 480+ (medium), 600+ (tablet), 960+ (desktop), 1300+ (wide) */
$screen: 'only screen';

$breakpoints: (
    mobile: '#{$screen} and (max-width: 480px)',
    mobileUp: '#{$screen} and (min-width: 481px)',
    mediumOnly: '#{$screen} and (min-width: 480px) and (max-width: 600px)',
    medium: '#{$screen} and (min-width: 601px)',
    phablet: '#{$screen} and (max-width: 768px)',
    tablet: '#{$screen} and (min-width: 768px)',
    tabletonly: '#{$screen} and (min-width: 600px) and (max-width: #{$desktop-width})',
    desktop: '#{$screen} and (min-width: #{$desktop-width})',
    wide: '#{$screen} and (min-width: 1100px)'
);

/**
 * Media query
 * $breakpoints defined in variables.scss
 */
@mixin media($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{map-get($breakpoints, $name)} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoints}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin flexbox() {
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -o-flex;
  display: flex;
}